package com.Pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class RegisterPage {

	static WebDriver driver;
   WebDriverWait wait;

	// Locators of Elements of the login page
   By createAcct = By.xpath("//div[@class='text-light']/a");
   By rgstrBtn = By.id("Primary_Navbar-Register");
	By fnameTxt = By.id("inputFirstName");
	By lnameTxt = By.id("inputLastName");
	By emailTxt = By.id("inputEmail");
	By countrylist = By.xpath("//div[@class='flag-container']/ul[@class='country-list']");
	By companyTxt = By.id("inputCompanyName");
	By addresstxt1 = By.id("inputAddress1");
	By addresstxt2 = By.id("inputAddress2");
	By cityTxt = By.id("inputCity");
	By countryList2 = By.id("inputCountry");
	By whatsappNum = By.id("customfield2");
	By pass1Txt = By.id("inputNewPassword1");
	By pass2Txt = By.id("inputNewPassword2");
	By recaptchaCheck= By.id("recaptcha-anchor");
	By registerBtn = By.xpath("//div[@class='form-actions']/input[@value='Register']");
	
	
	
	//By welcomeMenu = By.id("welcome");
	//By logoutBtn = By.xpath("//div[@id='welcome-menu']/ul/li/a[text()='Logout']");
	
	
	// Constructor
	public RegisterPage(WebDriver driver) {
		RegisterPage.driver = driver;
		wait = new WebDriverWait(driver, 1000);
	}

	// Set Username Text field
	public void setUsernamevalue(String usrname) throws InterruptedException {
		wait.until(ExpectedConditions.visibilityOfElementLocated(usernameTxt));
		driver.findElement(usernameTxt).sendKeys(usrname);
	}

	// Set Password Text field
	public void setPassowrdvalue(String Password) throws InterruptedException {
		wait.until(ExpectedConditions.visibilityOfElementLocated(passwordTxt));
		driver.findElement(passwordTxt).sendKeys(Password);
	}

	// click on login button
	public void clickLogin() throws InterruptedException {
		wait.until(ExpectedConditions.visibilityOfElementLocated(loginBtn));
		driver.findElement(loginBtn).click();
	}
	

	// click on logout button
	public void clickLogout() throws InterruptedException {
		driver.findElement(welcomeMenu).click();
		wait.until(ExpectedConditions.visibilityOfElementLocated(logoutBtn));
		driver.findElement(logoutBtn).click();
	}
	
	//Verify User logged in
	public String verifyUserloggedInSuccessfully()throws InterruptedException{
		
	  wait.until(ExpectedConditions.visibilityOfElementLocated(welcomeTxt));
		
		String actualText = driver.findElement(welcomeTxt).getText();
		return actualText;
		
		
	}
	//Verify user not logged Invalid credentials
	public String verifyInvalidCredentailsMsg()throws InterruptedException{
		
		  wait.until(ExpectedConditions.visibilityOfElementLocated(invalidCredMsg));
			
			String actualText = driver.findElement(invalidCredMsg).getText();
			return actualText;
			
			
		}
	
	

}
